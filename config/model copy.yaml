classifiers:
- AdaBoostClassifier:
  short_name: "AdaBoost"
  parameters:
      n_estimators:
        type: int
        min: 50
        max: 1000
      learning_rate:
        type: float
        min: 0.01
        max: 1.0
        log: true
      algorithm: SAMME
- RandomForestClassifier:
  short_name: "RandomForest"
  parameters:
      n_jobs: -1
      n_estimators:
        type: int
        min: 50
        max: 300
      max_depth:
        type: int
        min: 2
        max: 30
      min_samples_split:
        type: int
        min: 2
        max: 20
      min_samples_leaf:
        type: int
        min: 1
        max: 20
- DecisionTreeClassifier:
  short_name: "DecisionTree"
  parameters:
      max_depth:
        type: int
        min: 2
        max: 30
      min_samples_split:
        type: int
        min: 2
        max: 20
      min_samples_leaf:
        type: int
        min: 1
        max: 20
- LGBMClassifier:
  short_name: "LightGBM"
  parameters:
      objective: binary
      metric: binary_logloss
      verbosity: -1
      boosting_type: gbdt
      lambda_l1:
        type: float
        min: 1.0e-08
        max: 10.0
        log: true
      lambda_l2:
        type: float
        min: 1.0e-08
        max: 10.0
        log: true
      num_leaves:
        type: int
        min: 2
        max: 256
      feature_fraction:
        type: float
        min: 0.4
        max: 1.0
      bagging_fraction:
        type: float
        min: 0.4
        max: 1.0
      bagging_freq:
        type: int
        min: 1
        max: 7
      min_child_samples:
        type: int
        min: 5
        max: 100
- XGBClassifier:
  short_name: "XGBoost"
  parameters:
      verbosity: 0
      objective:
        type: categorical
        choices: ["binary:logistic"]
      eval_metric:
        type: categorical
        choices: ["auc"]
      booster:
        type: categorical
        choices: ["gbtree", "gblinear", "dart"]
      lambda:
        type: float
        min: 1.0e-8
        max: 1.0
        log: true
      alpha:
        type: float
        min: 1.0e-8
        max: 1.0
        log: true
      subsample:
        type: float
        min: 0.2
        max: 1.0
      colsample_bytree:
        type: float
        min: 0.2
        max: 1.0
- CatBoostClassifier:
  short_name: "CatBoost"
  parameters:
      verbose: 0
      objective:
        type: categorical
        choices: ["Logloss", "CrossEntropy"]
      colsample_bylevel:
        type: float
        min: 0.01
        max: 0.1
      depth:
        type: int
        min: 1
        max: 12
      boosting_type:
        type: categorical
        choices: ["Ordered", "Plain"]
      bootstrap_type:
        type: categorical
        choices: ["Bayesian", "Bernoulli", "MVS"]
- LogisticRegression:
  short_name: "LR"
  parameters:
      solver:
        - "newton-cholesky"
        - "lbfgs"
        - "liblinear"
        - "sag"
        - "saga"
      max_iter:
        type: int
        min: 10000
        max: 50000
      penalty:
        - "l1"
        - "l2"
        - "elasticnet"
        - None
      C:
        type: float
        min: 1.0e-10
        max: 1000
        log: True
        condition: penalty != None
      l1_ratio:
        type: float
        min: 0
        max: 1
        condition: penalty == "elasticnet"
- KNeighborsClassifier:
  short_name: "KNeighbors"
  parameters:
      n_neighbors:
        type: int
        min: 1
        max: 50
      weights:
        type: categorical
        choices: ["uniform", "distance"]
      p:
        type: int
        min: 1
        max: 2
      leaf_size:
        type: int
        min: 10
        max: 100
      metric:
        type: categorical
        choices: ["euclidean", "manhattan", "minkowski", "chebyshev"]
- GradientBoostingClassifier:
  short_name: "GradientBoosting"
  parameters:
      learning_rate:
        type: float
        min: 0.001
        max: 0.3
        log: True
      n_estimators:
        type: int
        min: 100
        max: 1000
      max_depth:
        type: int
        min: 3
        max: 10
      min_samples_split:
        type: int
        min: 2
        max: 20
      min_samples_leaf:
        type: int
        min: 1
        max: 20
      max_features:
        type: categorical
        choices: ["sqrt", "log2", null]
base_model_name: LGBMClassifier
base_model_score: '0.8326007770762507'